plugins {
	id 'java'
	id 'eclipse'
	id 'idea'
	id 'maven-publish'
	id 'fabric-loom' version '0.5-SNAPSHOT' apply false
	id 'com.matthewprenger.cursegradle' version "1.4.0"
	id "com.modrinth.minotaur" version "1.1.0"
}

class Globals {
	static def baseVersion = "0.7.19"
	static def mcVersion = "1.16.4"
	static def yarnVersion = "7"
	static def loaderVersion = "0.10.8"
	static def apiVersion = "0.28.3+1.16"
	static def changelog = "Fix username formatting in discord, use server nickname when it's possible."
}

version = Globals.baseVersion

def getSubprojectVersion() {
	return Globals.baseVersion
}

allprojects {
	def projectName = it.name;
	apply plugin: 'maven-publish'
	apply plugin: 'fabric-loom'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	group = "fr.catcore"


	dependencies {
		if (projectName == "1.15.2") {
			minecraft "com.mojang:minecraft:1.15.2"
			mappings "net.fabricmc:yarn:1.15.2+build.17:v2"
			modImplementation "net.fabricmc.fabric-api:fabric-api:0.23.1+1.15"
		} else {
			minecraft "com.mojang:minecraft:$Globals.mcVersion"
			mappings "net.fabricmc:yarn:${Globals.mcVersion}+build.${Globals.yarnVersion}:v2"
			modImplementation "net.fabricmc.fabric-api:fabric-api:${Globals.apiVersion}"
		}
		modCompile "net.fabricmc:fabric-loader:${Globals.loaderVersion}"
	}

	minecraft {
	}

	configurations {
		dev
	}

	repositories {
		mavenLocal()
		mavenCentral()
		jcenter()
		maven {
			name = 'Fabric'
			url = 'http://maven.fabricmc.net/'
		}
		maven {
			name = 'SpongePowered'
			url = 'http://repo.spongepowered.org/maven'
		}
		maven {
			name = 'mojang'
			url = 'https://libraries.minecraft.net/'
		}
		maven {
			name = "CurseMaven"
			url = "https://www.cursemaven.com"
			content {
				includeGroup "curse.maven"
			}
		}
		maven {
			name = "Jitpack"
			url "https://jitpack.io/"
		}
	}

	jar {
		classifier = "dev"
	}

	afterEvaluate {
		remapJar {
			input = file("${project.buildDir}/libs/$archivesBaseName-${version}-dev.jar")
			archiveName = "${archivesBaseName}-${version}.jar"
		}

		artifacts {
			dev file: file("${project.buildDir}/libs/$archivesBaseName-${version}-dev.jar"), type: "jar", builtBy: jar
		}

		processResources {
			inputs.property "version", project.version

			from(sourceSets.main.resources.srcDirs) {
				include "fabric.mod.json"
				expand "version": project.version
			}

			from(sourceSets.main.resources.srcDirs) {
				exclude "fabric.mod.json"
			}
		}
	}

	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}
}

subprojects {

	dependencies {
//        testmodCompile sourceSets.main.output
	}

	task remapMavenJar(type: Copy, dependsOn: remapJar) {
		afterEvaluate {
			from("${project.buildDir}/libs/$archivesBaseName-${version}.jar")
			into("${project.buildDir}/libs/")
			rename { String fn -> "$archivesBaseName-${version}-maven.jar" }
		}
	}

	publishing {
		publications {
			mavenJava(MavenPublication) {
				afterEvaluate {
					artifact(file("${project.buildDir}/libs/$archivesBaseName-${version}-maven.jar")) {
						builtBy remapMavenJar
					}
					artifact(sourcesJar) {
						builtBy remapSourcesJar
					}
				}
			}
		}
	}
}

task remapMavenJar(type: net.fabricmc.loom.task.RemapJarTask, dependsOn: jar) {
	afterEvaluate {
		input = file("${project.buildDir}/libs/${archivesBaseName}-${version}-dev.jar")
		archiveName = "${archivesBaseName}-${version}-maven.jar"
		addNestedDependencies = false
	}
}

subprojects.each { remapJar.dependsOn("${it.path}:remapJar") }

dependencies {
	afterEvaluate {
		subprojects.each {
			compile project(path: ":${it.name}", configuration: "dev")
			include project("${it.name}:")
		}
	}
}

curseforge {
	apiKey = System.getenv('CURSEKEY') ?: "a key"
	project {
		id = "318315"
		releaseType = "release"
		changelog = Globals.changelog
		mainArtifact(file("build/libs/${archivesBaseName}-${version}.jar")) {
			displayName = Globals.baseVersion
			relations {
				requiredDependency "fabric-api"
			}
		}

		gameVersionStrings.clear()
		gameVersionStrings.add("Fabric")

		// 1.17.x
		gameVersionStrings.add("1.17")

		// 1.16.x
		gameVersionStrings.add("1.16.4")
		gameVersionStrings.add("1.16.3")
		gameVersionStrings.add("1.16.2")
		gameVersionStrings.add("1.16.1")
		gameVersionStrings.add("1.16")
		gameVersionStrings.add("1.16-Snapshot")

		// 1.15.x
		gameVersionStrings.add("1.15.2")
		gameVersionStrings.add("1.15.1")
		gameVersionStrings.add("1.15")
		gameVersionStrings.add("1.15-Snapshot")

		// 1.14.x
		gameVersionStrings.add("1.14.4")
		gameVersionStrings.add("1.14.3")
		gameVersionStrings.add("1.14.2")
		gameVersionStrings.add("1.14.1")
		gameVersionStrings.add("1.14")
		gameVersionStrings.add("1.14-Snapshot")
	}
	options {
		forgeGradleIntegration = false
	}
}

import com.modrinth.minotaur.TaskModrinthUpload

task publishModrinth (type: TaskModrinthUpload) {

	token = System.getenv('MODRINTHKEY') ?: "a key"
	projectId = 'FCmig1C9'
	versionNumber = Globals.baseVersion
	uploadFile = file("build/libs/${archivesBaseName}-${version}.jar")

	addLoader('fabric')

	// 1.17.x
	addGameVersion('20w51a')
	addGameVersion('20w49a')
	addGameVersion('20w48a')
	addGameVersion('20w46a')
	addGameVersion('20w45a')

	// 1.16.x
	addGameVersion('1.16.4')
	addGameVersion('1.16.4-rc1')
	addGameVersion('1.16.4-pre2')
	addGameVersion('1.16.4-pre1')
	addGameVersion('1.16.3')
	addGameVersion('1.16.3-rc1')
	addGameVersion('1.16.2')
	addGameVersion('1.16.2-rc2')
	addGameVersion('1.16.2-rc1')
	addGameVersion('1.16.2-pre3')
	addGameVersion('1.16.2-pre2')
	addGameVersion('1.16.2-pre1')
	addGameVersion('20w30a')
	addGameVersion('20w29a')
	addGameVersion('20w28a')
	addGameVersion('20w27a')
	addGameVersion('1.16.1')
	addGameVersion('1.16')
	addGameVersion('1.16-rc1')
	addGameVersion('1.16-pre8')
	addGameVersion('1.16-pre7')
	addGameVersion('1.16-pre6')
	addGameVersion('1.16-pre5')
	addGameVersion('1.16-pre4')
	addGameVersion('1.16-pre3')
	addGameVersion('1.16-pre2')
	addGameVersion('1.16-pre1')
	addGameVersion('20w21a')
	addGameVersion('20w20b')
	addGameVersion('20w20a')
	addGameVersion('20w19a')
	addGameVersion('20w18a')
	addGameVersion('20w17a')
	addGameVersion('20w16a')
	addGameVersion('20w15a')
	addGameVersion('20w14a')
	addGameVersion('20w14infinite')
	addGameVersion('20w13b')
	addGameVersion('20w13a')
	addGameVersion('20w12a')
	addGameVersion('20w11a')
	addGameVersion('20w10a')
	addGameVersion('20w09a')
	addGameVersion('20w08a')
	addGameVersion('20w07a')
	addGameVersion('20w06a')

	// 1.15.x
	addGameVersion('1.15.2')
	addGameVersion('1.15.2-pre2')
	addGameVersion('1.15.2-pre1')
	addGameVersion('1.15.1')
	addGameVersion('1.15.1-pre1')
	addGameVersion('1.15')
	addGameVersion('1.15-pre7')
	addGameVersion('1.15-pre6')
	addGameVersion('1.15-pre5')
	addGameVersion('1.15-pre4')
	addGameVersion('1.15-pre3')
	addGameVersion('1.15-pre2')
	addGameVersion('1.15-pre1')
	addGameVersion('19w46b')
	addGameVersion('19w46a')
	addGameVersion('19w45b')
	addGameVersion('19w45a')
	addGameVersion('19w44a')
	addGameVersion('19w42a')
	addGameVersion('19w41a')
	addGameVersion('19w40a')
	addGameVersion('19w39a')
	addGameVersion('19w38b')
	addGameVersion('19w38a')
	addGameVersion('19w37a')
	addGameVersion('19w36a')
	addGameVersion('19w35a')
	addGameVersion('19w34a')

	// 1.14.x
	addGameVersion('1.14.4')
	addGameVersion('1.14.4-pre7')
	addGameVersion('1.14.4-pre6')
	addGameVersion('1.14.4-pre5')
	addGameVersion('1.14.4-pre4')
	addGameVersion('1.14.4-pre3')
	addGameVersion('1.14.4-pre2')
	addGameVersion('1.14.4-pre1')
	addGameVersion('1.14.3')
	addGameVersion('1.14.3-pre4')
	addGameVersion('1.14.3-pre3')
	addGameVersion('1.14.3-pre2')
	addGameVersion('1.14.3-pre1')
	addGameVersion('1.14.2')
	addGameVersion('1.14.2-pre4')
	addGameVersion('1.14.2-pre3')
	addGameVersion('1.14.2-pre2')
	addGameVersion('1.14.2-pre1')
	addGameVersion('1.14.1')
	addGameVersion('1.14.1-pre2')
	addGameVersion('1.14.1-pre1')
	addGameVersion('1.14')
}
